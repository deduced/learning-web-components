/* Write ruleset(s) that will style all elements with the button class to
be visually and functionally identical. To succeed, you will
need to apply properties to negate the default properties
of an element */

* {
    box-sizing: border-box;
}

/* just grab the styles needed from the flexy flexbox grid */
.flexy-container {
    margin-right: auto;
    margin-left: auto;
    width: 100%;
    max-width: 960px;
    /*max-width: 1140px; */
    box-sizing: border-box;
}


.flexy-row {
  display: flex;
  flex-direction: row;
  box-sizing: border-box;
}

.flexy-col {
  flex-direction: column;
}

.flexy-between {
  justify-content: space-between;
}

.flexy-w50 {
  width: 50%;
}

.flexy-12 {
  flex-basis: 100%;
}


.button {
    display: inline-block;
    position: relative;
    padding: 5px 10px 6px;
    margin: 0 .5em;
    border-radius: 5px;
    background-color: rgba(166,166,166,0.8);
    /*line-height: 1;*/
    font-size: 16px;
    font-weight: bold;
    color: rgba(255,255,255,0.9);
    text-shadow: 0 -1px 1px rgba(0,0,0,0.25);
    box-shadow: 0 1px 3px rgba(0,0,0,0.5);
    border-bottom: 1px solid rgba(0,0,0,0.25);
    cursor: pointer;
}

.button:hover {
    background-color: rgba(135, 135, 135, 0.9);
}

.button:active {
    top: 1px;
}

.button-sm {
    font-size: 12px;
    max-width: 100px;
}

.button-md {
    max-width: 151px;
    font-size: 16px;
    padding: 7px 13px 7px;

}

.button-lg {
    max-width: 190px;
    font-size: 24px;
    padding: 8px 14px 9px;
}


@media (max-width: 550px) {
  .button-group {
    flex-direction: column;
  }

  .button {
    margin: .2em 0;
  }

}
